#textdomain wesnoth

#define MORNING_NO_SOUND
    [time]
        id=morning_no_sound
        name= _ "Morning"
        image=misc/schedule-morning.png
        lawful_bonus=25
        darker=dawn
    [/time]
#enddef

#define PARTIAL_HEAL FILTER HP
    [store_unit]
        [filter]
            {FILTER}
        [/filter]

        kill=no
        variable=PARTIAL_HEAL_store
    [/store_unit]

    {FOREACH PARTIAL_HEAL_store PARTIAL_HEAL_i}
    [object]
        silent=yes
    
        [filter]
            x,y=$PARTIAL_HEAL_store[$PARTIAL_HEAL_i].x,$PARTIAL_HEAL_store[$PARTIAL_HEAL_i].y
        [/filter]
    
        [effect]
            apply_to=hitpoints
            increase={HP}
        [/effect]
    [/object]
    {NEXT PARTIAL_HEAL_i}

    {CLEAR_VARIABLE PARTIAL_HEAL_store}
#enddef

#define UNIT_MSG FILTER MSG
    [scroll_to_unit]
        {FILTER}
    [/scroll_to_unit]
    [message]
        {FILTER}
        message={MSG}
    [/message]
#enddef

#define UNIT_LEADER TYPE DESC UDESC SIDE X Y
    [unit]
        type={TYPE}
        description={DESC}
        user_description={UDESC}
        side={SIDE}
        x={X}
        y={Y}
        canrecruit=yes
        [modifications]
            {TRAIT_LOYAL}
        [/modifications]
    [/unit]
#enddef

#define UNIT_NAMELESS TYPE SIDE X Y
    [unit]
        type={TYPE}
        description={TYPE}
        side={SIDE}
        x={X}
        y={Y}
        [modifications]
            {TRAIT_LOYAL}
        [/modifications]
    [/unit]
#enddef

#define UNIT_FILL TYPE SIDE X Y
    #Create top fencers
    [store_locations]
        variable=locs
        x={X}
        y={Y}
    [/store_locations]
    {FOREACH locs i}
    {VARIABLE_OP x to_variable (locs[$i|].x)}
    {VARIABLE_OP y to_variable (locs[$i|].y)}
    {UNIT_NAMELESS ({TYPE}) ({SIDE}) $x $y}
    {NEXT i}
    {VARIABLE fill_count $locs.length}
    {CLEAR_VARIABLE locs}
    {CLEAR_VARIABLE x}
    {CLEAR_VARIABLE y}
#enddef

#define DIE_DEFEAT DEAD_FILTER SPEAKER_FILTER MSG
    [event]
        name=die
        [filter]
            {DEAD_FILTER}
        [/filter]
        {UNIT_MSG ({SPEAKER_FILTER}) ({MSG})}
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
#enddef

#define STORE_UNITS STORE FILTER KILL
    [store_unit]
        variable={STORE}
        kill={KILL}
        [filter]
            {FILTER}
        [/filter]
    [/store_unit]
#enddef

#define BEGIN_MODIFY STORE
    {FOREACH ({STORE}) MODIFY_UNIT_i}
#enddef

#define GET_STORED_VALUE STORE VAR VALUE_VAR
    {VARIABLE_OP ({VALUE_VAR}) to_variable ({STORE}[$$MODIFY_UNIT_i|].{VAR})}
#enddef

#define MODIFY_UNIT_VARIABLE STORE VAR VALUE
    {VARIABLE_OP VAR format ({STORE}[$MODIFY_UNIT_i|].{VAR})}
    [set_variable]
        name=$VAR
        format={VALUE}
    [/set_variable]
#enddef

#define END_MODIFY STORE FIND_VACANT
    {VARIABLE_OP VAR format ({STORE}[$MODIFY_UNIT_i|])}
    [unstore_unit]
        variable=$VAR
        find_vacant={FIND_VACANT}
    [/unstore_unit]
    {NEXT MODIFY_UNIT_i}

    {CLEAR_VARIABLE VAR}
#enddef

#define UNSTORE_AT_INDEX STORE INDEX SIDE X Y
    {VARIABLE_OP var format ({STORE}[{INDEX}].side)}
    {VARIABLE $var ({SIDE})}
    {VARIABLE_OP var format ({STORE}[{INDEX}].x)}
    {VARIABLE_OP $var format ({X})}
    {VARIABLE_OP var format ({STORE}[{INDEX}].y)}
    {VARIABLE_OP $var format ({Y})}
    {VARIABLE_OP var format ({STORE}[{INDEX}].moves)}
    {VARIABLE_OP $var to_variable ({STORE}[{INDEX}].max_moves)}
    {VARIABLE_OP var format ({STORE}[{INDEX}].attacks_left)}
    {VARIABLE_OP $var to_variable ({STORE}[{INDEX}].max_attacks)}
    {VARIABLE_OP var format ({STORE}[{INDEX}].goto_x)}
    {VARIABLE $var 0}
    {VARIABLE_OP var format ({STORE}[{INDEX}].goto_y)}
    {VARIABLE $var 0}
    {VARIABLE_OP var format ({STORE}[{INDEX}])}

    [unstore_unit]
        variable=$var
        find_vacant=yes
    [/unstore_unit]
    {CLEAR_VARIABLE var}
#enddef

#define UNSTORE STORE
    {BEGIN_MODIFY ({STORE})}
    {GET_STORED_VALUE ({STORE}) max_moves max_moves}
    {MODIFY_UNIT_VARIABLE ({STORE}) moves $max_moves}
    {GET_STORED_VALUE ({STORE}) max_attacks max_attacks}
    {MODIFY_UNIT_VARIABLE ({STORE}) attacks_left $max_attacks}
    {MODIFY_UNIT_VARIABLE ({STORE}) goto_x 0}
    {MODIFY_UNIT_VARIABLE ({STORE}) goto_y 0}
    {END_MODIFY ({STORE}) yes}
    {CLEAR_VARIABLE ({STORE})}
#enddef

#define UNSTORE_AT STORE SIDE X Y
    [store_locations]
        variable=locs
        x={X}
        y={Y}
    [/store_locations]
    {VARIABLE j 0}

    {BEGIN_MODIFY ({STORE})}
    {MODIFY_UNIT_VARIABLE ({STORE}) side ({SIDE})}
    {MODIFY_UNIT_VARIABLE ({STORE}) x $locs[$j].x}
    {MODIFY_UNIT_VARIABLE ({STORE}) y $locs[$j].y}
    {GET_STORED_VALUE ({STORE}) max_moves max_moves}
    {MODIFY_UNIT_VARIABLE ({STORE}) moves $max_moves}
    {GET_STORED_VALUE ({STORE}) max_attacks max_attacks}
    {MODIFY_UNIT_VARIABLE ({STORE}) attacks_left $max_attacks}
    {MODIFY_UNIT_VARIABLE ({STORE}) goto_x 0}
    {MODIFY_UNIT_VARIABLE ({STORE}) goto_y 0}
    #Increment location index
    {VARIABLE_OP j add 1}
    [if]
        [variable]
            name=j
            less_than=$locs.length
        [/variable]
        [else]
            {VARIABLE j 0}
        [/else]
    [/if]
    {END_MODIFY ({STORE}) yes}

    {CLEAR_VARIABLE locs}
    {CLEAR_VARIABLE ({STORE})}
#enddef

#define HP_RESTORE X Y
    [store_unit]
        variable=store
        [filter]
            x={X}
            y={Y}
        [/filter]
    [/store_unit]
    {VARIABLE store.hitpoints $store.max_hitpoints}
    [unstore_unit]
        variable=store
    [/unstore_unit]
#enddef

#define FLASH_SCREEN COLOR_VAR N
    {VARIABLE i 0}
    [while]
        [variable]
            name=i
            less_than={N}
        [/variable]
        [do]
            [delay]
                time=10
            [/delay]
            [colour_adjust]
                {COLOR_VAR}=200
            [/colour_adjust]
            [delay]
                time=10
            [/delay]
            [colour_adjust]
                {COLOR_VAR}=0
            [/colour_adjust]
            {VARIABLE_OP i add 1}
        [/do]
    [/while]
#enddef
